

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jan 24 21:26:58 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     0008                     PORTD           equ	8	;# 
    67     0009                     PORTE           equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000D                     PIR2            equ	13	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0013                     SSPBUF          equ	19	;# 
    79     0014                     SSPCON          equ	20	;# 
    80     0015                     CCPR1           equ	21	;# 
    81     0015                     CCPR1L          equ	21	;# 
    82     0016                     CCPR1H          equ	22	;# 
    83     0017                     CCP1CON         equ	23	;# 
    84     0018                     RCSTA           equ	24	;# 
    85     0019                     TXREG           equ	25	;# 
    86     001A                     RCREG           equ	26	;# 
    87     001B                     CCPR2           equ	27	;# 
    88     001B                     CCPR2L          equ	27	;# 
    89     001C                     CCPR2H          equ	28	;# 
    90     001D                     CCP2CON         equ	29	;# 
    91     001E                     ADRESH          equ	30	;# 
    92     001F                     ADCON0          equ	31	;# 
    93     0081                     OPTION_REG      equ	129	;# 
    94     0085                     TRISA           equ	133	;# 
    95     0086                     TRISB           equ	134	;# 
    96     0087                     TRISC           equ	135	;# 
    97     0088                     TRISD           equ	136	;# 
    98     0089                     TRISE           equ	137	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008D                     PIE2            equ	141	;# 
   101     008E                     PCON            equ	142	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0094                     SSPSTAT         equ	148	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009C                     CMCON           equ	156	;# 
   109     009D                     CVRCON          equ	157	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     018C                     EECON1          equ	396	;# 
   117     018D                     EECON2          equ	397	;# 
   118     0000                     INDF            equ	0	;# 
   119     0001                     TMR0            equ	1	;# 
   120     0002                     PCL             equ	2	;# 
   121     0003                     STATUS          equ	3	;# 
   122     0004                     FSR             equ	4	;# 
   123     0005                     PORTA           equ	5	;# 
   124     0006                     PORTB           equ	6	;# 
   125     0007                     PORTC           equ	7	;# 
   126     0008                     PORTD           equ	8	;# 
   127     0009                     PORTE           equ	9	;# 
   128     000A                     PCLATH          equ	10	;# 
   129     000B                     INTCON          equ	11	;# 
   130     000C                     PIR1            equ	12	;# 
   131     000D                     PIR2            equ	13	;# 
   132     000E                     TMR1            equ	14	;# 
   133     000E                     TMR1L           equ	14	;# 
   134     000F                     TMR1H           equ	15	;# 
   135     0010                     T1CON           equ	16	;# 
   136     0011                     TMR2            equ	17	;# 
   137     0012                     T2CON           equ	18	;# 
   138     0013                     SSPBUF          equ	19	;# 
   139     0014                     SSPCON          equ	20	;# 
   140     0015                     CCPR1           equ	21	;# 
   141     0015                     CCPR1L          equ	21	;# 
   142     0016                     CCPR1H          equ	22	;# 
   143     0017                     CCP1CON         equ	23	;# 
   144     0018                     RCSTA           equ	24	;# 
   145     0019                     TXREG           equ	25	;# 
   146     001A                     RCREG           equ	26	;# 
   147     001B                     CCPR2           equ	27	;# 
   148     001B                     CCPR2L          equ	27	;# 
   149     001C                     CCPR2H          equ	28	;# 
   150     001D                     CCP2CON         equ	29	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISA           equ	133	;# 
   155     0086                     TRISB           equ	134	;# 
   156     0087                     TRISC           equ	135	;# 
   157     0088                     TRISD           equ	136	;# 
   158     0089                     TRISE           equ	137	;# 
   159     008C                     PIE1            equ	140	;# 
   160     008D                     PIE2            equ	141	;# 
   161     008E                     PCON            equ	142	;# 
   162     0091                     SSPCON2         equ	145	;# 
   163     0092                     PR2             equ	146	;# 
   164     0093                     SSPADD          equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0098                     TXSTA           equ	152	;# 
   167     0099                     SPBRG           equ	153	;# 
   168     009C                     CMCON           equ	156	;# 
   169     009D                     CVRCON          equ	157	;# 
   170     009E                     ADRESL          equ	158	;# 
   171     009F                     ADCON1          equ	159	;# 
   172     010C                     EEDATA          equ	268	;# 
   173     010D                     EEADR           equ	269	;# 
   174     010E                     EEDATH          equ	270	;# 
   175     010F                     EEADRH          equ	271	;# 
   176     018C                     EECON1          equ	396	;# 
   177     018D                     EECON2          equ	397	;# 
   178                           
   179                           	psect	idataBANK0
   180     06AD                     __pidataBANK0:
   181                           
   182                           ;initializer for main@F1007
   183     06AD  343F               	retlw	63
   184     06AE  3406               	retlw	6
   185     06AF  345B               	retlw	91
   186     06B0  344F               	retlw	79
   187     06B1  3466               	retlw	102
   188     06B2  346D               	retlw	109
   189     06B3  347D               	retlw	125
   190     06B4  3407               	retlw	7
   191     06B5  347F               	retlw	127
   192     06B6  346F               	retlw	111
   193     0006                     _PORTB          set	6
   194     0007                     _PORTC          set	7
   195     0087                     _TRISC          set	135
   196     0086                     _TRISB          set	134
   197                           
   198                           	psect	cinit
   199     07EE                     start_initialization:	
   200                           ; #config settings
   201                           
   202     07EE                     __initialization:
   203                           
   204                           ; Initialize objects allocated to BANK0
   205     07EE  1383               	bcf	3,7	;select IRP bank0
   206     07EF  3040               	movlw	low (__pdataBANK0+10)
   207     07F0  00FD               	movwf	btemp+-1
   208     07F1  3006               	movlw	high __pidataBANK0
   209     07F2  00FE               	movwf	btemp
   210     07F3  30AD               	movlw	low __pidataBANK0
   211     07F4  00FF               	movwf	btemp+1
   212     07F5  3036               	movlw	low __pdataBANK0
   213     07F6  0084               	movwf	4
   214     07F7  120A  118A  26BB  120A  118A  	fcall	init_ram0
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	dataBANK0
   223     0036                     __pdataBANK0:
   224     0036                     main@F1007:
   225     0036                     	ds	10
   226                           
   227                           	psect	inittext
   228     06B7                     init_fetch0:	
   229                           ;	Called with low address in FSR and high address in W
   230                           
   231     06B7  087E               	movf	btemp,w
   232     06B8  008A               	movwf	10
   233     06B9  087F               	movf	btemp+1,w
   234     06BA  0082               	movwf	2
   235     06BB                     init_ram0:	
   236                           ;Called with:
   237                           ;	high address of idata address in btemp 
   238                           ;	low address of idata address in btemp+1 
   239                           ;	low address of data in FSR
   240                           ;	high address + 1 of data in btemp-1
   241                           
   242     06BB  120A  118A  26B7  120A  118A  	fcall	init_fetch0
   243     06C0  0080               	movwf	0
   244     06C1  0A84               	incf	4,f
   245     06C2  0804               	movf	4,w
   246     06C3  067D               	xorwf	btemp+-1,w
   247     06C4  1903               	btfsc	3,2
   248     06C5  3400               	retlw	0
   249     06C6  0AFF               	incf	btemp+1,f
   250     06C7  1903               	btfsc	3,2
   251     06C8  0AFE               	incf	btemp,f
   252     06C9  2EBB               	goto	init_ram0
   253                           
   254                           	psect	cstackCOMMON
   255     0070                     __pcstackCOMMON:
   256     0070                     ?_main:
   257     0070                     ?___lwdiv:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?___lwmod:	
   261                           ; 2 bytes @ 0x0
   262                           
   263     0070                     ___lwdiv@divisor:	
   264                           ; 2 bytes @ 0x0
   265                           
   266     0070                     ___lwmod@divisor:	
   267                           ; 2 bytes @ 0x0
   268                           
   269                           
   270                           ; 2 bytes @ 0x0
   271     0070                     	ds	2
   272     0072                     ___lwdiv@dividend:
   273     0072                     ___lwmod@dividend:	
   274                           ; 2 bytes @ 0x2
   275                           
   276                           
   277                           ; 2 bytes @ 0x2
   278     0072                     	ds	2
   279     0074                     ___lwmod@counter:
   280     0074                     ___lwdiv@quotient:	
   281                           ; 1 bytes @ 0x4
   282                           
   283     0074                     ??___lwdiv:	
   284                           ; 2 bytes @ 0x4
   285                           
   286     0074                     ??___lwmod:	
   287                           ; 1 bytes @ 0x4
   288                           
   289                           
   290                           ; 1 bytes @ 0x4
   291     0074                     	ds	2
   292     0076                     ___lwdiv@counter:
   293                           
   294                           ; 1 bytes @ 0x6
   295     0076                     	ds	1
   296     0077                     ??_main:
   297                           
   298                           ; 1 bytes @ 0x7
   299     0077                     	ds	4
   300                           
   301                           	psect	cstackBANK0
   302     0020                     __pcstackBANK0:
   303     0020                     main@segment:
   304                           
   305                           ; 10 bytes @ 0x0
   306     0020                     	ds	10
   307     002A                     main@digit:
   308                           
   309                           ; 8 bytes @ 0xA
   310     002A                     	ds	8
   311     0032                     main@i:
   312                           
   313                           ; 2 bytes @ 0x12
   314     0032                     	ds	2
   315     0034                     main@number:
   316                           
   317                           ; 2 bytes @ 0x14
   318     0034                     	ds	2
   319                           
   320                           	psect	maintext
   321     0744                     __pmaintext:	
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 32 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  segment        10    0[BANK0 ] unsigned char [10]
   332 ;;  digit           8   10[BANK0 ] unsigned int [4]
   333 ;;  number          2   20[BANK0 ] unsigned int 
   334 ;;  i               2   18[BANK0 ] unsigned int 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0      22       0       0       0
   346 ;;      Temps:          4       0       0       0       0
   347 ;;      Totals:         4      22       0       0       0
   348 ;;Total ram usage:       26 bytes
   349 ;; Hardware stack levels required when called: 1
   350 ;; This function calls:
   351 ;;		___lwdiv
   352 ;;		___lwmod
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358     0744                     _main:	
   359                           ;psect for function _main
   360                           
   361     0744                     l698:	
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   364                           
   365                           
   366                           ;main.c: 35:     unsigned char segment[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x
      +                          07, 0x7F, 0x6F};
   367     0744  3036               	movlw	main@F1007& (0+255)
   368     0745  0084               	movwf	4
   369     0746  3020               	movlw	low main@segment
   370     0747  00F7               	movwf	??_main
   371     0748  300A               	movlw	10
   372     0749  00F8               	movwf	??_main+1
   373     074A                     u290:
   374     074A  1383               	bcf	3,7	;select IRP bank0
   375     074B  0800               	movf	0,w
   376     074C  00F9               	movwf	??_main+2
   377     074D  0A04               	incf	4,w
   378     074E  00FA               	movwf	??_main+3
   379     074F  0877               	movf	??_main,w
   380     0750  0084               	movwf	4
   381     0751  0879               	movf	??_main+2,w
   382     0752  0080               	movwf	0
   383     0753  0A04               	incf	4,w
   384     0754  00F7               	movwf	??_main
   385     0755  087A               	movf	??_main+3,w
   386     0756  0084               	movwf	4
   387     0757  0BF8               	decfsz	??_main+1,f
   388     0758  2F4A               	goto	u290
   389     0759                     l700:
   390                           
   391                           ;main.c: 37:     TRISB = 0x00;
   392     0759  1683               	bsf	3,5	;RP0=1, select bank1
   393     075A  1303               	bcf	3,6	;RP1=0, select bank1
   394     075B  0186               	clrf	6	;volatile
   395     075C                     l702:
   396                           
   397                           ;main.c: 38:     TRISC = 0x00;
   398     075C  0187               	clrf	7	;volatile
   399     075D                     l704:
   400                           
   401                           ;main.c: 40:     unsigned int digit[4], i=3;
   402     075D  3003               	movlw	3
   403     075E  1283               	bcf	3,5	;RP0=0, select bank0
   404     075F  1303               	bcf	3,6	;RP1=0, select bank0
   405     0760  00B2               	movwf	main@i
   406     0761  3000               	movlw	0
   407     0762  00B3               	movwf	main@i+1
   408     0763                     l706:
   409                           
   410                           ;main.c: 43:     unsigned int number = 4589;
   411     0763  30ED               	movlw	237
   412     0764  00B4               	movwf	main@number
   413     0765  3011               	movlw	17
   414     0766  00B5               	movwf	main@number+1
   415                           
   416                           ;main.c: 45:     while(number!=0)
   417     0767  2F9B               	goto	l714
   418     0768                     l708:
   419                           
   420                           ;main.c: 46:     {;main.c: 47:         digit[i] = number%10;
   421     0768  300A               	movlw	10
   422     0769  00F0               	movwf	___lwmod@divisor
   423     076A  3000               	movlw	0
   424     076B  00F1               	movwf	___lwmod@divisor+1
   425     076C  0835               	movf	main@number+1,w
   426     076D  00F3               	movwf	___lwmod@dividend+1
   427     076E  0834               	movf	main@number,w
   428     076F  00F2               	movwf	___lwmod@dividend
   429     0770  120A  118A  26CA  120A  118A  	fcall	___lwmod
   430     0775  1283               	bcf	3,5	;RP0=0, select bank0
   431     0776  1303               	bcf	3,6	;RP1=0, select bank0
   432     0777  0832               	movf	main@i,w
   433     0778  00F7               	movwf	??_main
   434     0779  0777               	addwf	??_main,w
   435     077A  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   436     077B  0084               	movwf	4
   437     077C  0870               	movf	?___lwmod,w
   438     077D  1383               	bcf	3,7	;select IRP bank0
   439     077E  0080               	movwf	0
   440     077F  0A84               	incf	4,f
   441     0780  0871               	movf	?___lwmod+1,w
   442     0781  0080               	movwf	0
   443     0782                     l710:
   444                           
   445                           ;main.c: 48:         number = number/10;
   446     0782  300A               	movlw	10
   447     0783  00F0               	movwf	___lwdiv@divisor
   448     0784  3000               	movlw	0
   449     0785  00F1               	movwf	___lwdiv@divisor+1
   450     0786  0835               	movf	main@number+1,w
   451     0787  00F3               	movwf	___lwdiv@dividend+1
   452     0788  0834               	movf	main@number,w
   453     0789  00F2               	movwf	___lwdiv@dividend
   454     078A  120A  118A  2702  120A  118A  	fcall	___lwdiv
   455     078F  0871               	movf	?___lwdiv+1,w
   456     0790  1283               	bcf	3,5	;RP0=0, select bank0
   457     0791  1303               	bcf	3,6	;RP1=0, select bank0
   458     0792  00B5               	movwf	main@number+1
   459     0793  0870               	movf	?___lwdiv,w
   460     0794  00B4               	movwf	main@number
   461     0795                     l712:
   462                           
   463                           ;main.c: 49:         i--;
   464     0795  3001               	movlw	1
   465     0796  02B2               	subwf	main@i,f
   466     0797  3000               	movlw	0
   467     0798  1C03               	skipc
   468     0799  03B3               	decf	main@i+1,f
   469     079A  02B3               	subwf	main@i+1,f
   470     079B                     l714:
   471                           
   472                           ;main.c: 45:     while(number!=0)
   473     079B  0834               	movf	main@number,w
   474     079C  0435               	iorwf	main@number+1,w
   475     079D  1D03               	btfss	3,2
   476     079E  2FA0               	goto	u301
   477     079F  2FA1               	goto	u300
   478     07A0                     u301:
   479     07A0  2F68               	goto	l708
   480     07A1                     u300:
   481     07A1                     l19:
   482                           
   483                           ;main.c: 52:     PORTC = 0xFE;
   484     07A1  30FE               	movlw	254
   485     07A2  0087               	movwf	7	;volatile
   486     07A3                     l716:
   487                           
   488                           ;main.c: 53:     PORTB = segment[digit[0]];
   489     07A3  082A               	movf	main@digit,w
   490     07A4  3E20               	addlw	(low (main@segment| 0))& (0+255)
   491     07A5  0084               	movwf	4
   492     07A6  1383               	bcf	3,7	;select IRP bank0
   493     07A7  0800               	movf	0,w
   494     07A8  0086               	movwf	6	;volatile
   495     07A9                     l718:
   496                           
   497                           ;main.c: 54:     _delay((unsigned long)((10)*(20000000/4000.0)));
   498     07A9  3041               	movlw	65
   499     07AA  00F8               	movwf	??_main+1
   500     07AB  30EE               	movlw	238
   501     07AC  00F7               	movwf	??_main
   502     07AD                     u317:
   503     07AD  0BF7               	decfsz	??_main,f
   504     07AE  2FAD               	goto	u317
   505     07AF  0BF8               	decfsz	??_main+1,f
   506     07B0  2FAD               	goto	u317
   507     07B1  0000               	nop
   508     07B2                     l720:
   509                           
   510                           ;main.c: 55:     PORTC = 0xFD;
   511     07B2  30FD               	movlw	253
   512     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   513     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   514     07B5  0087               	movwf	7	;volatile
   515     07B6                     l722:
   516                           
   517                           ;main.c: 56:     PORTB = segment[digit[1]];
   518     07B6  082C               	movf	main@digit+2,w
   519     07B7  3E20               	addlw	(low (main@segment| 0))& (0+255)
   520     07B8  0084               	movwf	4
   521     07B9  1383               	bcf	3,7	;select IRP bank0
   522     07BA  0800               	movf	0,w
   523     07BB  0086               	movwf	6	;volatile
   524                           
   525                           ;main.c: 57:     _delay((unsigned long)((10)*(20000000/4000.0)));
   526     07BC  3041               	movlw	65
   527     07BD  00F8               	movwf	??_main+1
   528     07BE  30EE               	movlw	238
   529     07BF  00F7               	movwf	??_main
   530     07C0                     u327:
   531     07C0  0BF7               	decfsz	??_main,f
   532     07C1  2FC0               	goto	u327
   533     07C2  0BF8               	decfsz	??_main+1,f
   534     07C3  2FC0               	goto	u327
   535     07C4  0000               	nop
   536     07C5                     l724:
   537                           
   538                           ;main.c: 58:     PORTC = 0xFB;
   539     07C5  30FB               	movlw	251
   540     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   541     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   542     07C8  0087               	movwf	7	;volatile
   543     07C9                     l726:
   544                           
   545                           ;main.c: 59:     PORTB = segment[digit[2]];
   546     07C9  082E               	movf	main@digit+4,w
   547     07CA  3E20               	addlw	(low (main@segment| 0))& (0+255)
   548     07CB  0084               	movwf	4
   549     07CC  1383               	bcf	3,7	;select IRP bank0
   550     07CD  0800               	movf	0,w
   551     07CE  0086               	movwf	6	;volatile
   552     07CF                     l728:
   553                           
   554                           ;main.c: 60:     _delay((unsigned long)((10)*(20000000/4000.0)));
   555     07CF  3041               	movlw	65
   556     07D0  00F8               	movwf	??_main+1
   557     07D1  30EE               	movlw	238
   558     07D2  00F7               	movwf	??_main
   559     07D3                     u337:
   560     07D3  0BF7               	decfsz	??_main,f
   561     07D4  2FD3               	goto	u337
   562     07D5  0BF8               	decfsz	??_main+1,f
   563     07D6  2FD3               	goto	u337
   564     07D7  0000               	nop
   565     07D8                     l730:
   566                           
   567                           ;main.c: 61:     PORTC = 0xF7;
   568     07D8  30F7               	movlw	247
   569     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   570     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   571     07DB  0087               	movwf	7	;volatile
   572                           
   573                           ;main.c: 62:     PORTB = segment[digit[3]];
   574     07DC  0830               	movf	main@digit+6,w
   575     07DD  3E20               	addlw	(low (main@segment| 0))& (0+255)
   576     07DE  0084               	movwf	4
   577     07DF  1383               	bcf	3,7	;select IRP bank0
   578     07E0  0800               	movf	0,w
   579     07E1  0086               	movwf	6	;volatile
   580     07E2                     l732:
   581                           
   582                           ;main.c: 63:     _delay((unsigned long)((10)*(20000000/4000.0)));
   583     07E2  3041               	movlw	65
   584     07E3  00F8               	movwf	??_main+1
   585     07E4  30EE               	movlw	238
   586     07E5  00F7               	movwf	??_main
   587     07E6                     u347:
   588     07E6  0BF7               	decfsz	??_main,f
   589     07E7  2FE6               	goto	u347
   590     07E8  0BF8               	decfsz	??_main+1,f
   591     07E9  2FE6               	goto	u347
   592     07EA  0000               	nop
   593     07EB                     l20:
   594     07EB  120A  118A  2800   	ljmp	start
   595     07EE                     __end_of_main:
   596                           
   597                           	psect	text1
   598     06CA                     __ptext1:	
   599 ;; *************** function ___lwmod *****************
   600 ;; Defined at:
   601 ;;		line 5 in file "J:\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  divisor         2    0[COMMON] unsigned int 
   604 ;;  dividend        2    2[COMMON] unsigned int 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  counter         1    4[COMMON] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2    0[COMMON] unsigned int 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         4       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         5       0       0       0       0
   620 ;;Total ram usage:        5 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629     06CA                     ___lwmod:	
   630                           ;psect for function ___lwmod
   631                           
   632     06CA                     l676:	
   633                           ;incstack = 0
   634                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   635                           
   636     06CA  0870               	movf	___lwmod@divisor,w
   637     06CB  0471               	iorwf	___lwmod@divisor+1,w
   638     06CC  1903               	btfsc	3,2
   639     06CD  2ECF               	goto	u231
   640     06CE  2ED0               	goto	u230
   641     06CF                     u231:
   642     06CF  2EFD               	goto	l694
   643     06D0                     u230:
   644     06D0                     l678:
   645     06D0  3001               	movlw	1
   646     06D1  00F4               	movwf	___lwmod@counter
   647     06D2  2EDC               	goto	l684
   648     06D3                     l680:
   649     06D3  3001               	movlw	1
   650     06D4                     u245:
   651     06D4  1003               	clrc
   652     06D5  0DF0               	rlf	___lwmod@divisor,f
   653     06D6  0DF1               	rlf	___lwmod@divisor+1,f
   654     06D7  3EFF               	addlw	-1
   655     06D8  1D03               	skipz
   656     06D9  2ED4               	goto	u245
   657     06DA                     l682:
   658     06DA  3001               	movlw	1
   659     06DB  07F4               	addwf	___lwmod@counter,f
   660     06DC                     l684:
   661     06DC  1FF1               	btfss	___lwmod@divisor+1,7
   662     06DD  2EDF               	goto	u251
   663     06DE  2EE0               	goto	u250
   664     06DF                     u251:
   665     06DF  2ED3               	goto	l680
   666     06E0                     u250:
   667     06E0                     l686:
   668     06E0  0871               	movf	___lwmod@divisor+1,w
   669     06E1  0273               	subwf	___lwmod@dividend+1,w
   670     06E2  1D03               	skipz
   671     06E3  2EE6               	goto	u265
   672     06E4  0870               	movf	___lwmod@divisor,w
   673     06E5  0272               	subwf	___lwmod@dividend,w
   674     06E6                     u265:
   675     06E6  1C03               	skipc
   676     06E7  2EE9               	goto	u261
   677     06E8  2EEA               	goto	u260
   678     06E9                     u261:
   679     06E9  2EF0               	goto	l690
   680     06EA                     u260:
   681     06EA                     l688:
   682     06EA  0870               	movf	___lwmod@divisor,w
   683     06EB  02F2               	subwf	___lwmod@dividend,f
   684     06EC  0871               	movf	___lwmod@divisor+1,w
   685     06ED  1C03               	skipc
   686     06EE  03F3               	decf	___lwmod@dividend+1,f
   687     06EF  02F3               	subwf	___lwmod@dividend+1,f
   688     06F0                     l690:
   689     06F0  3001               	movlw	1
   690     06F1                     u275:
   691     06F1  1003               	clrc
   692     06F2  0CF1               	rrf	___lwmod@divisor+1,f
   693     06F3  0CF0               	rrf	___lwmod@divisor,f
   694     06F4  3EFF               	addlw	-1
   695     06F5  1D03               	skipz
   696     06F6  2EF1               	goto	u275
   697     06F7                     l692:
   698     06F7  3001               	movlw	1
   699     06F8  02F4               	subwf	___lwmod@counter,f
   700     06F9  1D03               	btfss	3,2
   701     06FA  2EFC               	goto	u281
   702     06FB  2EFD               	goto	u280
   703     06FC                     u281:
   704     06FC  2EE0               	goto	l686
   705     06FD                     u280:
   706     06FD                     l694:
   707     06FD  0873               	movf	___lwmod@dividend+1,w
   708     06FE  00F1               	movwf	?___lwmod+1
   709     06FF  0872               	movf	___lwmod@dividend,w
   710     0700  00F0               	movwf	?___lwmod
   711     0701                     l396:
   712     0701  0008               	return
   713     0702                     __end_of___lwmod:
   714                           
   715                           	psect	text2
   716     0702                     __ptext2:	
   717 ;; *************** function ___lwdiv *****************
   718 ;; Defined at:
   719 ;;		line 5 in file "J:\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  divisor         2    0[COMMON] unsigned int 
   722 ;;  dividend        2    2[COMMON] unsigned int 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  quotient        2    4[COMMON] unsigned int 
   725 ;;  counter         1    6[COMMON] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  2    0[COMMON] unsigned int 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         4       0       0       0       0
   736 ;;      Locals:         3       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0
   738 ;;      Totals:         7       0       0       0       0
   739 ;;Total ram usage:        7 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748     0702                     ___lwdiv:	
   749                           ;psect for function ___lwdiv
   750                           
   751     0702                     l650:	
   752                           ;incstack = 0
   753                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   754                           
   755     0702  01F4               	clrf	___lwdiv@quotient
   756     0703  01F5               	clrf	___lwdiv@quotient+1
   757     0704                     l652:
   758     0704  0870               	movf	___lwdiv@divisor,w
   759     0705  0471               	iorwf	___lwdiv@divisor+1,w
   760     0706  1903               	btfsc	3,2
   761     0707  2F09               	goto	u161
   762     0708  2F0A               	goto	u160
   763     0709                     u161:
   764     0709  2F3F               	goto	l672
   765     070A                     u160:
   766     070A                     l654:
   767     070A  3001               	movlw	1
   768     070B  00F6               	movwf	___lwdiv@counter
   769     070C  2F16               	goto	l660
   770     070D                     l656:
   771     070D  3001               	movlw	1
   772     070E                     u175:
   773     070E  1003               	clrc
   774     070F  0DF0               	rlf	___lwdiv@divisor,f
   775     0710  0DF1               	rlf	___lwdiv@divisor+1,f
   776     0711  3EFF               	addlw	-1
   777     0712  1D03               	skipz
   778     0713  2F0E               	goto	u175
   779     0714                     l658:
   780     0714  3001               	movlw	1
   781     0715  07F6               	addwf	___lwdiv@counter,f
   782     0716                     l660:
   783     0716  1FF1               	btfss	___lwdiv@divisor+1,7
   784     0717  2F19               	goto	u181
   785     0718  2F1A               	goto	u180
   786     0719                     u181:
   787     0719  2F0D               	goto	l656
   788     071A                     u180:
   789     071A                     l662:
   790     071A  3001               	movlw	1
   791     071B                     u195:
   792     071B  1003               	clrc
   793     071C  0DF4               	rlf	___lwdiv@quotient,f
   794     071D  0DF5               	rlf	___lwdiv@quotient+1,f
   795     071E  3EFF               	addlw	-1
   796     071F  1D03               	skipz
   797     0720  2F1B               	goto	u195
   798     0721  0871               	movf	___lwdiv@divisor+1,w
   799     0722  0273               	subwf	___lwdiv@dividend+1,w
   800     0723  1D03               	skipz
   801     0724  2F27               	goto	u205
   802     0725  0870               	movf	___lwdiv@divisor,w
   803     0726  0272               	subwf	___lwdiv@dividend,w
   804     0727                     u205:
   805     0727  1C03               	skipc
   806     0728  2F2A               	goto	u201
   807     0729  2F2B               	goto	u200
   808     072A                     u201:
   809     072A  2F32               	goto	l668
   810     072B                     u200:
   811     072B                     l664:
   812     072B  0870               	movf	___lwdiv@divisor,w
   813     072C  02F2               	subwf	___lwdiv@dividend,f
   814     072D  0871               	movf	___lwdiv@divisor+1,w
   815     072E  1C03               	skipc
   816     072F  03F3               	decf	___lwdiv@dividend+1,f
   817     0730  02F3               	subwf	___lwdiv@dividend+1,f
   818     0731                     l666:
   819     0731  1474               	bsf	___lwdiv@quotient,0
   820     0732                     l668:
   821     0732  3001               	movlw	1
   822     0733                     u215:
   823     0733  1003               	clrc
   824     0734  0CF1               	rrf	___lwdiv@divisor+1,f
   825     0735  0CF0               	rrf	___lwdiv@divisor,f
   826     0736  3EFF               	addlw	-1
   827     0737  1D03               	skipz
   828     0738  2F33               	goto	u215
   829     0739                     l670:
   830     0739  3001               	movlw	1
   831     073A  02F6               	subwf	___lwdiv@counter,f
   832     073B  1D03               	btfss	3,2
   833     073C  2F3E               	goto	u221
   834     073D  2F3F               	goto	u220
   835     073E                     u221:
   836     073E  2F1A               	goto	l662
   837     073F                     u220:
   838     073F                     l672:
   839     073F  0875               	movf	___lwdiv@quotient+1,w
   840     0740  00F1               	movwf	?___lwdiv+1
   841     0741  0874               	movf	___lwdiv@quotient,w
   842     0742  00F0               	movwf	?___lwdiv
   843     0743                     l386:
   844     0743  0008               	return
   845     0744                     __end_of___lwdiv:
   846     0002                     ___latbits      equ	2
   847     007E                     btemp           set	126	;btemp
   848     007E                     wtemp0          set	126
   849                           
   850                           	psect	config
   851                           
   852                           ;Config register CONFIG @ 0x2007
   853                           ;	Oscillator Selection bits
   854                           ;	FOSC = HS, HS oscillator
   855                           ;	Watchdog Timer Enable bit
   856                           ;	WDTE = OFF, WDT disabled
   857                           ;	Power-up Timer Enable bit
   858                           ;	PWRTE = OFF, PWRT disabled
   859                           ;	Brown-out Reset Enable bit
   860                           ;	BOREN = ON, BOR enabled
   861                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   862                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   863                           ;	Data EEPROM Memory Code Protection bit
   864                           ;	CPD = OFF, Data EEPROM code protection off
   865                           ;	Flash Program Memory Write Enable bits
   866                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   867                           ;	In-Circuit Debugger Mode bit
   868                           ;	DEBUG = 0x1, unprogrammed default
   869                           ;	Flash Program Memory Code Protection bit
   870                           ;	CP = ON, All program memory code-protected
   871     2007                     	org	8199
   872     2007  1FFA               	dw	8186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     22      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0     625
                                              7 COMMON     4     4      0
                                              0 BANK0     22    22      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
   ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      32     40.0%
BITBANK0            80      0       0      0.0%
COMMON              14     11      11     78.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      43      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jan 24 21:26:58 2025

                      pc 0002                       l20 07EB                       l19 07A1  
                     fsr 0004                      l700 0759                      l710 0782  
                    l702 075C                      l720 07B2                      l712 0795  
                    l704 075D                      l386 0743                      l650 0702  
                    l730 07D8                      l722 07B6                      l714 079B  
                    l706 0763                      l660 0716                      l652 0704  
                    l396 0701                      l732 07E2                      l724 07C5  
                    l716 07A3                      l708 0768                      l670 0739  
                    l662 071A                      l654 070A                      l726 07C9  
                    l718 07A9                      l664 072B                      l656 070D  
                    l672 073F                      l680 06D3                      l728 07CF  
                    l666 0731                      l658 0714                      l690 06F0  
                    l682 06DA                      l668 0732                      l692 06F7  
                    l684 06DC                      l676 06CA                      l686 06E0  
                    l678 06D0                      l694 06FD                      l688 06EA  
                    l698 0744                      u200 072B                      u201 072A  
                    u220 073F                      u300 07A1                      u221 073E  
                    u205 0727                      u301 07A0                      u230 06D0  
                    u215 0733                      u231 06CF                      u160 070A  
                    u161 0709                      u250 06E0                      u251 06DF  
                    u180 071A                      u260 06EA                      u181 0719  
                    u261 06E9                      u245 06D4                      u317 07AD  
                    u175 070E                      u327 07C0                      u280 06FD  
                    u281 06FC                      u265 06E6                      u337 07D3  
                    u290 074A                      u195 071B                      u275 06F1  
                    u347 07E6                      fsr0 0004                      indf 0000  
            main@segment 0020                     _main 0744                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0744  
        __end_of___lwmod 0702                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@i 0032  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0077  
              ??___lwdiv 0074                ??___lwmod 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06AD               __pmaintext 0744  
                ___lwdiv 0702                  ___lwmod 06CA                  __ptext1 06CA  
                __ptext2 0702     end_of_initialization 07FC               main@number 0034  
    start_initialization 07EE               init_fetch0 06B7              __pdataBANK0 0036  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070         ___lwdiv@quotient 0074  
              main@F1007 0036                main@digit 002A          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 init_ram0 06BB         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
