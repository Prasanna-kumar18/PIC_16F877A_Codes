

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 23 21:13:42 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     0006                     _PORTBbits      set	6
   178     0007                     _PORTC          set	7
   179     0087                     _TRISC          set	135
   180     0086                     _TRISB          set	134
   181                           
   182                           	psect	strings
   183     0003                     __pstrings:
   184     0003                     stringtab:
   185     0003                     __stringtab:
   186     0003                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189     0003                     stringdir:
   190     0003  3000               	movlw	high stringdir
   191     0004  008A               	movwf	10
   192     0005  0804               	movf	4,w
   193     0006  0A84               	incf	4,f
   194     0007  0782               	addwf	2,f
   195     0008                     __stringbase:
   196     0008  3400               	retlw	0
   197     0009                     __end_of__stringtab:
   198     0009                     STR_2:
   199     0009  344D               	retlw	77	;'M'
   200     000A  3449               	retlw	73	;'I'
   201     000B  3443               	retlw	67	;'C'
   202     000C  3452               	retlw	82	;'R'
   203     000D  344F               	retlw	79	;'O'
   204     000E  3443               	retlw	67	;'C'
   205     000F  344F               	retlw	79	;'O'
   206     0010  344E               	retlw	78	;'N'
   207     0011  3454               	retlw	84	;'T'
   208     0012  3452               	retlw	82	;'R'
   209     0013  344F               	retlw	79	;'O'
   210     0014  344C               	retlw	76	;'L'
   211     0015  344C               	retlw	76	;'L'
   212     0016  3445               	retlw	69	;'E'
   213     0017  3452               	retlw	82	;'R'
   214     0018  3400               	retlw	0
   215     0019                     STR_1:
   216     0019  3450               	retlw	80	;'P'
   217     001A  3449               	retlw	73	;'I'
   218     001B  3443               	retlw	67	;'C'
   219     001C  3400               	retlw	0
   220                           
   221                           	psect	cinit
   222     07FC                     start_initialization:	
   223                           ; #config settings
   224                           
   225     07FC                     __initialization:
   226     07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229     07FC                     __end_of__initialization:
   230     07FC  0183               	clrf	3
   231     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	cstackCOMMON
   234     0070                     __pcstackCOMMON:
   235     0070                     ?_lcd_data:
   236     0070                     ?_lcd_command:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_lcd_intialise:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_lcd_data:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ??_lcd_command:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 1 bytes @ 0x0
   253     0070                     	ds	2
   254     0072                     lcd_data@data:
   255     0072                     lcd_command@cmd:	
   256                           ; 1 bytes @ 0x2
   257                           
   258                           
   259                           ; 1 bytes @ 0x2
   260     0072                     	ds	1
   261     0073                     ?_lcd_string:
   262     0073                     lcd_string@str:	
   263                           ; 1 bytes @ 0x3
   264                           
   265     0073                     ??_lcd_intialise:	
   266                           ; 1 bytes @ 0x3
   267                           
   268                           
   269                           ; 1 bytes @ 0x3
   270     0073                     	ds	1
   271     0074                     lcd_string@num:
   272                           
   273                           ; 1 bytes @ 0x4
   274     0074                     	ds	1
   275     0075                     ??_lcd_string:
   276                           
   277                           ; 1 bytes @ 0x5
   278     0075                     	ds	2
   279     0077                     lcd_string@i:
   280                           
   281                           ; 2 bytes @ 0x7
   282     0077                     	ds	2
   283     0079                     ??_main:
   284                           
   285                           	psect	maintext
   286     07D1                     __pmaintext:	
   287                           ; 1 bytes @ 0x9
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 66 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called: 2
   313 ;; This function calls:
   314 ;;		_lcd_command
   315 ;;		_lcd_intialise
   316 ;;		_lcd_string
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322     07D1                     _main:	
   323                           ;psect for function _main
   324                           
   325     07D1                     l627:	
   326                           ;incstack = 0
   327                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   328                           
   329                           
   330                           ;main.c: 68:     TRISB = 0x00;
   331     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   332     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   333     07D3  0186               	clrf	6	;volatile
   334                           
   335                           ;main.c: 69:     TRISC = 0x00;
   336     07D4  0187               	clrf	7	;volatile
   337     07D5                     l629:
   338                           
   339                           ;main.c: 71:     lcd_intialise();
   340     07D5  120A  118A  2794  120A  118A  	fcall	_lcd_intialise
   341     07DA                     l631:
   342                           
   343                           ;main.c: 74:     {;main.c: 75:         lcd_command(0x87);
   344     07DA  3087               	movlw	135
   345     07DB  120A  118A  276A  120A  118A  	fcall	_lcd_command
   346     07E0                     l633:
   347                           
   348                           ;main.c: 76:         lcd_string("PIC",3);
   349     07E0  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   350     07E1  00F3               	movwf	lcd_string@str
   351     07E2  3003               	movlw	3
   352     07E3  00F4               	movwf	lcd_string@num
   353     07E4  120A  118A  27AD  120A  118A  	fcall	_lcd_string
   354     07E9                     l635:
   355                           
   356                           ;main.c: 77:         lcd_command(0xC1);
   357     07E9  30C1               	movlw	193
   358     07EA  120A  118A  276A  120A  118A  	fcall	_lcd_command
   359     07EF                     l637:
   360                           
   361                           ;main.c: 78:         lcd_string("MICROCONTROLLER",15);
   362     07EF  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   363     07F0  00F3               	movwf	lcd_string@str
   364     07F1  300F               	movlw	15
   365     07F2  00F4               	movwf	lcd_string@num
   366     07F3  120A  118A  27AD  120A  118A  	fcall	_lcd_string
   367     07F8  2FDA               	goto	l631
   368     07F9  120A  118A  2800   	ljmp	start
   369     07FC                     __end_of_main:
   370                           
   371                           	psect	text1
   372     07AD                     __ptext1:	
   373 ;; *************** function _lcd_string *****************
   374 ;; Defined at:
   375 ;;		line 49 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;  str             1    3[COMMON] PTR unsigned char 
   378 ;;		 -> STR_2(16), STR_1(4), 
   379 ;;  num             1    4[COMMON] unsigned char 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  i               2    7[COMMON] unsigned int 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         2       0       0       0       0
   392 ;;      Locals:         2       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0
   394 ;;      Totals:         6       0       0       0       0
   395 ;;Total ram usage:        6 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 1
   398 ;; This function calls:
   399 ;;		_lcd_data
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405     07AD                     _lcd_string:	
   406                           ;psect for function _lcd_string
   407                           
   408     07AD                     l619:	
   409                           ;incstack = 0
   410                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   411                           
   412                           
   413                           ;main.c: 49: void lcd_string(unsigned char *str,unsigned char num);main.c: 50: {;main.c:
      +                           51:     for(unsigned int i=0;i<num;i++)
   414     07AD  01F7               	clrf	lcd_string@i
   415     07AE  01F8               	clrf	lcd_string@i+1
   416     07AF  2FC3               	goto	l625
   417     07B0                     l621:
   418                           
   419                           ;main.c: 52:     {;main.c: 53:         lcd_data(str[i]);
   420     07B0  0877               	movf	lcd_string@i,w
   421     07B1  0773               	addwf	lcd_string@str,w
   422     07B2  0084               	movwf	4
   423     07B3  120A  118A  2003  120A  118A  	fcall	stringdir
   424     07B8  120A  118A  277F  120A  118A  	fcall	_lcd_data
   425     07BD                     l623:
   426                           
   427                           ;main.c: 54:     }
   428     07BD  3001               	movlw	1
   429     07BE  07F7               	addwf	lcd_string@i,f
   430     07BF  1803               	skipnc
   431     07C0  0AF8               	incf	lcd_string@i+1,f
   432     07C1  3000               	movlw	0
   433     07C2  07F8               	addwf	lcd_string@i+1,f
   434     07C3                     l625:
   435     07C3  0874               	movf	lcd_string@num,w
   436     07C4  00F5               	movwf	??_lcd_string
   437     07C5  01F6               	clrf	??_lcd_string+1
   438     07C6  0876               	movf	??_lcd_string+1,w
   439     07C7  0278               	subwf	lcd_string@i+1,w
   440     07C8  1D03               	skipz
   441     07C9  2FCC               	goto	u25
   442     07CA  0875               	movf	??_lcd_string,w
   443     07CB  0277               	subwf	lcd_string@i,w
   444     07CC                     u25:
   445     07CC  1C03               	skipc
   446     07CD  2FCF               	goto	u21
   447     07CE  2FD0               	goto	u20
   448     07CF                     u21:
   449     07CF  2FB0               	goto	l621
   450     07D0                     u20:
   451     07D0                     l22:
   452     07D0  0008               	return
   453     07D1                     __end_of_lcd_string:
   454                           
   455                           	psect	text2
   456     077F                     __ptext2:	
   457 ;; *************** function _lcd_data *****************
   458 ;; Defined at:
   459 ;;		line 30 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  data            1    wreg     unsigned char 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  data            1    2[COMMON] unsigned char 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         1       0       0       0       0
   475 ;;      Temps:          2       0       0       0       0
   476 ;;      Totals:         3       0       0       0       0
   477 ;;Total ram usage:        3 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_lcd_string
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     077F                     _lcd_data:	
   487                           ;psect for function _lcd_data
   488                           
   489                           
   490                           ;incstack = 0
   491                           ; Regs used in _lcd_data: [wreg]
   492                           ;lcd_data@data stored from wreg
   493     077F  00F2               	movwf	lcd_data@data
   494     0780                     l577:
   495                           
   496                           ;main.c: 30: void lcd_data(unsigned char data);main.c: 31: {;main.c: 32:     PORTC = dat
      +                          a;
   497     0780  0872               	movf	lcd_data@data,w
   498     0781  1283               	bcf	3,5	;RP0=0, select bank0
   499     0782  1303               	bcf	3,6	;RP1=0, select bank0
   500     0783  0087               	movwf	7	;volatile
   501     0784                     l579:
   502                           
   503                           ;main.c: 33:     PORTBbits.RB0 = 1;
   504     0784  1406               	bsf	6,0	;volatile
   505     0785                     l581:
   506                           
   507                           ;main.c: 34:     PORTBbits.RB1 = 0;
   508     0785  1086               	bcf	6,1	;volatile
   509     0786                     l583:
   510                           
   511                           ;main.c: 35:     PORTBbits.RB2 = 1;
   512     0786  1506               	bsf	6,2	;volatile
   513                           
   514                           ;main.c: 36:     _delay((unsigned long)((5)*(20000000/4000.0)));
   515     0787  3021               	movlw	33
   516     0788  00F1               	movwf	??_lcd_data+1
   517     0789  3076               	movlw	118
   518     078A  00F0               	movwf	??_lcd_data
   519     078B                     u37:
   520     078B  0BF0               	decfsz	??_lcd_data,f
   521     078C  2F8B               	goto	u37
   522     078D  0BF1               	decfsz	??_lcd_data+1,f
   523     078E  2F8B               	goto	u37
   524     078F  0000               	nop
   525     0790                     l585:
   526                           
   527                           ;main.c: 37:     PORTBbits.RB2 = 0;
   528     0790  1283               	bcf	3,5	;RP0=0, select bank0
   529     0791  1303               	bcf	3,6	;RP1=0, select bank0
   530     0792  1106               	bcf	6,2	;volatile
   531     0793                     l13:
   532     0793  0008               	return
   533     0794                     __end_of_lcd_data:
   534                           
   535                           	psect	text3
   536     0794                     __ptext3:	
   537 ;; *************** function _lcd_intialise *****************
   538 ;; Defined at:
   539 ;;		line 57 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		_lcd_command
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     0794                     _lcd_intialise:	
   568                           ;psect for function _lcd_intialise
   569                           
   570     0794                     l605:	
   571                           ;incstack = 0
   572                           ; Regs used in _lcd_intialise: [wreg+status,2+status,0+pclath+cstack]
   573                           
   574                           
   575                           ;main.c: 59:     lcd_command(0x38);
   576     0794  3038               	movlw	56
   577     0795  120A  118A  276A  120A  118A  	fcall	_lcd_command
   578                           
   579                           ;main.c: 60:     lcd_command(0x06);
   580     079A  3006               	movlw	6
   581     079B  120A  118A  276A  120A  118A  	fcall	_lcd_command
   582                           
   583                           ;main.c: 61:     lcd_command(0x0C);
   584     07A0  300C               	movlw	12
   585     07A1  120A  118A  276A  120A  118A  	fcall	_lcd_command
   586                           
   587                           ;main.c: 62:     lcd_command(0x01);
   588     07A6  3001               	movlw	1
   589     07A7  120A  118A  276A  120A  118A  	fcall	_lcd_command
   590     07AC                     l25:
   591     07AC  0008               	return
   592     07AD                     __end_of_lcd_intialise:
   593                           
   594                           	psect	text4
   595     076A                     __ptext4:	
   596 ;; *************** function _lcd_command *****************
   597 ;; Defined at:
   598 ;;		line 40 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  cmd             1    wreg     unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  cmd             1    2[COMMON] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0
   614 ;;      Temps:          2       0       0       0       0
   615 ;;      Totals:         3       0       0       0       0
   616 ;;Total ram usage:        3 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_lcd_intialise
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626     076A                     _lcd_command:	
   627                           ;psect for function _lcd_command
   628                           
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _lcd_command: [wreg]
   632                           ;lcd_command@cmd stored from wreg
   633     076A  00F2               	movwf	lcd_command@cmd
   634     076B                     l587:
   635                           
   636                           ;main.c: 40: void lcd_command(unsigned char cmd);main.c: 41: {;main.c: 42:     PORTC = c
      +                          md;
   637     076B  0872               	movf	lcd_command@cmd,w
   638     076C  1283               	bcf	3,5	;RP0=0, select bank0
   639     076D  1303               	bcf	3,6	;RP1=0, select bank0
   640     076E  0087               	movwf	7	;volatile
   641     076F                     l589:
   642                           
   643                           ;main.c: 43:     PORTBbits.RB0 = 0;
   644     076F  1006               	bcf	6,0	;volatile
   645     0770                     l591:
   646                           
   647                           ;main.c: 44:     PORTBbits.RB1 = 0;
   648     0770  1086               	bcf	6,1	;volatile
   649     0771                     l593:
   650                           
   651                           ;main.c: 45:     PORTBbits.RB2 = 1;
   652     0771  1506               	bsf	6,2	;volatile
   653                           
   654                           ;main.c: 46:     _delay((unsigned long)((5)*(20000000/4000.0)));
   655     0772  3021               	movlw	33
   656     0773  00F1               	movwf	??_lcd_command+1
   657     0774  3076               	movlw	118
   658     0775  00F0               	movwf	??_lcd_command
   659     0776                     u47:
   660     0776  0BF0               	decfsz	??_lcd_command,f
   661     0777  2F76               	goto	u47
   662     0778  0BF1               	decfsz	??_lcd_command+1,f
   663     0779  2F76               	goto	u47
   664     077A  0000               	nop
   665     077B                     l595:
   666                           
   667                           ;main.c: 47:     PORTBbits.RB2 = 0;
   668     077B  1283               	bcf	3,5	;RP0=0, select bank0
   669     077C  1303               	bcf	3,6	;RP1=0, select bank0
   670     077D  1106               	bcf	6,2	;volatile
   671     077E                     l16:
   672     077E  0008               	return
   673     077F                     __end_of_lcd_command:
   674     0002                     ___latbits      equ	2
   675     007E                     btemp           set	126	;btemp
   676     007E                     wtemp0          set	126
   677                           
   678                           	psect	config
   679                           
   680                           ;Config register CONFIG @ 0x2007
   681                           ;	Oscillator Selection bits
   682                           ;	FOSC = HS, HS oscillator
   683                           ;	Watchdog Timer Enable bit
   684                           ;	WDTE = OFF, WDT disabled
   685                           ;	Power-up Timer Enable bit
   686                           ;	PWRTE = OFF, PWRT disabled
   687                           ;	Brown-out Reset Enable bit
   688                           ;	BOREN = ON, BOR enabled
   689                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   690                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   691                           ;	Data EEPROM Memory Code Protection bit
   692                           ;	CPD = OFF, Data EEPROM code protection off
   693                           ;	Flash Program Memory Write Enable bits
   694                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   695                           ;	In-Circuit Debugger Mode bit
   696                           ;	DEBUG = 0x1, unprogrammed default
   697                           ;	Flash Program Memory Code Protection bit
   698                           ;	CP = ON, All program memory code-protected
   699     2007                     	org	8199
   700     2007  1FFA               	dw	8186

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[4]), STR_2(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_intialise->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     139
                        _lcd_command
                      _lcd_intialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           6     4      2     109
                                              3 COMMON     6     4      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_intialise                                        0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_intialise
     _lcd_command
   _lcd_string
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      9       9     64.3%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       9      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 23 21:13:42 2025

                      pc 0002             lcd_data@data 0072                       l13 0793  
                     l22 07D0                       l16 077E                       l25 07AC  
                     u20 07D0                       u21 07CF                       u25 07CC  
                     u37 078B                       u47 0776                       fsr 0004  
                    l605 0794                      l621 07B0                      l623 07BD  
                    l631 07DA                      l625 07C3                      l633 07E0  
                    l619 07AD                      l635 07E9                      l627 07D1  
                    l581 0785                      l637 07EF                      l629 07D5  
                    l591 0770                      l583 0786                      l593 0771  
                    l585 0790                      l577 0780                      l595 077B  
                    l587 076B                      l579 0784                      l589 076F  
                    fsr0 0004                     STR_1 0019                     STR_2 0009  
                   _main 07D1                     btemp 007E                     start 0000  
            lcd_string@i 0077                    ?_main 0070                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          ??_lcd_intialise 0073  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0079  
         lcd_command@cmd 0072         __end_of_lcd_data 0794            lcd_string@num 0074  
          lcd_string@str 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07D1                ?_lcd_data 0070               _lcd_string 07AD  
             __stringtab 0003                  __ptext1 07AD                  __ptext2 077F  
                __ptext3 0794                  __ptext4 076A               ??_lcd_data 0070  
   end_of_initialization 07FC    __end_of_lcd_intialise 07AD                _PORTBbits 0006  
            ?_lcd_string 0073            ??_lcd_command 0070      start_initialization 07FC  
    __end_of_lcd_command 077F                ___latbits 0002                __pstrings 0003  
            _lcd_command 076A              __stringbase 0008             ??_lcd_string 0075  
     __end_of_lcd_string 07D1       __end_of__stringtab 0009                 _lcd_data 077F  
              stringcode 0003            _lcd_intialise 0794                 stringdir 0003  
               stringtab 0003             ?_lcd_command 0070           ?_lcd_intialise 0070  
