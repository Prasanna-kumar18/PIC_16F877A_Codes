

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 22 21:09:52 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataBANK0
   178     078E                     __pidataBANK0:
   179                           
   180                           ;initializer for main@F1007
   181     078E  343F               	retlw	63
   182     078F  3406               	retlw	6
   183     0790  345B               	retlw	91
   184     0791  344F               	retlw	79
   185     0792  3466               	retlw	102
   186     0793  346D               	retlw	109
   187     0794  347D               	retlw	125
   188     0795  3407               	retlw	7
   189     0796  347F               	retlw	127
   190     0797  346F               	retlw	111
   191     0006                     _PORTB          set	6
   192     0086                     _TRISB          set	134
   193                           
   194                           	psect	cinit
   195     07EE                     start_initialization:	
   196                           ; #config settings
   197                           
   198     07EE                     __initialization:
   199                           
   200                           ; Initialize objects allocated to BANK0
   201     07EE  1383               	bcf	3,7	;select IRP bank0
   202     07EF  3036               	movlw	low (__pdataBANK0+10)
   203     07F0  00FD               	movwf	btemp+-1
   204     07F1  3007               	movlw	high __pidataBANK0
   205     07F2  00FE               	movwf	btemp
   206     07F3  308E               	movlw	low __pidataBANK0
   207     07F4  00FF               	movwf	btemp+1
   208     07F5  302C               	movlw	low __pdataBANK0
   209     07F6  0084               	movwf	4
   210     07F7  120A  118A  279C  120A  118A  	fcall	init_ram0
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2FAB   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	dataBANK0
   219     002C                     __pdataBANK0:
   220     002C                     main@F1007:
   221     002C                     	ds	10
   222                           
   223                           	psect	inittext
   224     0798                     init_fetch0:	
   225                           ;	Called with low address in FSR and high address in W
   226                           
   227     0798  087E               	movf	btemp,w
   228     0799  008A               	movwf	10
   229     079A  087F               	movf	btemp+1,w
   230     079B  0082               	movwf	2
   231     079C                     init_ram0:	
   232                           ;Called with:
   233                           ;	high address of idata address in btemp 
   234                           ;	low address of idata address in btemp+1 
   235                           ;	low address of data in FSR
   236                           ;	high address + 1 of data in btemp-1
   237                           
   238     079C  120A  118A  2798  120A  118A  	fcall	init_fetch0
   239     07A1  0080               	movwf	0
   240     07A2  0A84               	incf	4,f
   241     07A3  0804               	movf	4,w
   242     07A4  067D               	xorwf	btemp+-1,w
   243     07A5  1903               	btfsc	3,2
   244     07A6  3400               	retlw	0
   245     07A7  0AFF               	incf	btemp+1,f
   246     07A8  1903               	btfsc	3,2
   247     07A9  0AFE               	incf	btemp,f
   248     07AA  2F9C               	goto	init_ram0
   249                           
   250                           	psect	cstackCOMMON
   251     0070                     __pcstackCOMMON:
   252     0070                     ?_main:
   253     0070                     ??_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258     0070                     	ds	4
   259                           
   260                           	psect	cstackBANK0
   261     0020                     __pcstackBANK0:
   262     0020                     main@segment:
   263                           
   264                           ; 10 bytes @ 0x0
   265     0020                     	ds	10
   266     002A                     main@i:
   267                           
   268                           ; 2 bytes @ 0xA
   269     002A                     	ds	2
   270                           
   271                           	psect	maintext
   272     07AB                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 24 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  i               2   10[BANK0 ] unsigned int 
   283 ;;  segment        10    0[BANK0 ] unsigned char [10]
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0      12       0       0       0
   295 ;;      Temps:          4       0       0       0       0
   296 ;;      Totals:         4      12       0       0       0
   297 ;;Total ram usage:       16 bytes
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305     07AB                     _main:	
   306                           ;psect for function _main
   307                           
   308     07AB                     l580:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   311                           
   312                           
   313                           ;main.c: 27:     unsigned char segment[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x
      +                          07, 0x7F, 0X6F};
   314     07AB  302C               	movlw	main@F1007& (0+255)
   315     07AC  0084               	movwf	4
   316     07AD  3020               	movlw	low main@segment
   317     07AE  00F0               	movwf	??_main
   318     07AF  300A               	movlw	10
   319     07B0  00F1               	movwf	??_main+1
   320     07B1                     u30:
   321     07B1  1383               	bcf	3,7	;select IRP bank0
   322     07B2  0800               	movf	0,w
   323     07B3  00F2               	movwf	??_main+2
   324     07B4  0A04               	incf	4,w
   325     07B5  00F3               	movwf	??_main+3
   326     07B6  0870               	movf	??_main,w
   327     07B7  0084               	movwf	4
   328     07B8  0872               	movf	??_main+2,w
   329     07B9  0080               	movwf	0
   330     07BA  0A04               	incf	4,w
   331     07BB  00F0               	movwf	??_main
   332     07BC  0873               	movf	??_main+3,w
   333     07BD  0084               	movwf	4
   334     07BE  0BF1               	decfsz	??_main+1,f
   335     07BF  2FB1               	goto	u30
   336     07C0                     l582:
   337                           
   338                           ;main.c: 29:     TRISB = 0;
   339     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   340     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   341     07C2  0186               	clrf	6	;volatile
   342     07C3                     l584:
   343                           
   344                           ;main.c: 32:     {;main.c: 33:         for(unsigned int i=0;i<10;i++)
   345     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   346     07C4  01AA               	clrf	main@i
   347     07C5  01AB               	clrf	main@i+1
   348     07C6                     l590:
   349                           
   350                           ;main.c: 34:         {;main.c: 35:             PORTB = segment[i];
   351     07C6  082A               	movf	main@i,w
   352     07C7  3E20               	addlw	(low (main@segment| 0))& (0+255)
   353     07C8  0084               	movwf	4
   354     07C9  1383               	bcf	3,7	;select IRP bank0
   355     07CA  0800               	movf	0,w
   356     07CB  0086               	movwf	6	;volatile
   357     07CC                     l592:
   358                           
   359                           ;main.c: 36:             _delay((unsigned long)((500)*(20000000/4000.0)));
   360     07CC  300D               	movlw	13
   361     07CD  00F2               	movwf	??_main+2
   362     07CE  30AF               	movlw	175
   363     07CF  00F1               	movwf	??_main+1
   364     07D0  30B6               	movlw	182
   365     07D1  00F0               	movwf	??_main
   366     07D2                     u57:
   367     07D2  0BF0               	decfsz	??_main,f
   368     07D3  2FD2               	goto	u57
   369     07D4  0BF1               	decfsz	??_main+1,f
   370     07D5  2FD2               	goto	u57
   371     07D6  0BF2               	decfsz	??_main+2,f
   372     07D7  2FD2               	goto	u57
   373     07D8  0000               	nop
   374     07D9                     l594:
   375                           
   376                           ;main.c: 37:         }
   377     07D9  3001               	movlw	1
   378     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   379     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   380     07DC  07AA               	addwf	main@i,f
   381     07DD  1803               	skipnc
   382     07DE  0AAB               	incf	main@i+1,f
   383     07DF  3000               	movlw	0
   384     07E0  07AB               	addwf	main@i+1,f
   385     07E1                     l596:
   386     07E1  3000               	movlw	0
   387     07E2  022B               	subwf	main@i+1,w
   388     07E3  300A               	movlw	10
   389     07E4  1903               	skipnz
   390     07E5  022A               	subwf	main@i,w
   391     07E6  1C03               	skipc
   392     07E7  2FE9               	goto	u41
   393     07E8  2FEA               	goto	u40
   394     07E9                     u41:
   395     07E9  2FC6               	goto	l590
   396     07EA                     u40:
   397     07EA  2FC3               	goto	l584
   398     07EB  120A  118A  2800   	ljmp	start
   399     07EE                     __end_of_main:
   400     0002                     ___latbits      equ	2
   401     007E                     btemp           set	126	;btemp
   402     007E                     wtemp0          set	126
   403                           
   404                           	psect	config
   405                           
   406                           ;Config register CONFIG @ 0x2007
   407                           ;	Oscillator Selection bits
   408                           ;	FOSC = HS, HS oscillator
   409                           ;	Watchdog Timer Enable bit
   410                           ;	WDTE = OFF, WDT disabled
   411                           ;	Power-up Timer Enable bit
   412                           ;	PWRTE = OFF, PWRT disabled
   413                           ;	Brown-out Reset Enable bit
   414                           ;	BOREN = ON, BOR enabled
   415                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   416                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   417                           ;	Data EEPROM Memory Code Protection bit
   418                           ;	CPD = OFF, Data EEPROM code protection off
   419                           ;	Flash Program Memory Write Enable bits
   420                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   421                           ;	In-Circuit Debugger Mode bit
   422                           ;	DEBUG = 0x1, unprogrammed default
   423                           ;	Flash Program Memory Code Protection bit
   424                           ;	CP = ON, All program memory code-protected
   425     2007                     	org	8199
   426     2007  1FFA               	dw	8186

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      92
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     12      22     27.5%
BITBANK0            80      0       0      0.0%
COMMON              14      4       4     28.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      26      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 22 21:09:52 2025

                      pc 0002                       u30 07B1                       u40 07EA  
                     u41 07E9                       u57 07D2                       fsr 0004  
                    l580 07AB                      l590 07C6                      l582 07C0  
                    l592 07CC                      l584 07C3                      l594 07D9  
                    l596 07E1                      fsr0 0004                      indf 0000  
            main@segment 0020                     _main 07AB                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 002A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 078E               __pmaintext 07AB  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 0798  
            __pdataBANK0 002C                ___latbits 0002            __pcstackBANK0 0020  
              main@F1007 002C                 init_ram0 079C  
