

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 30 20:48:29 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0006                     _PORTBbits      set	6
   176     0001                     _TMR0           set	1
   177     000B                     _INTCONbits     set	11
   178     0086                     _TRISB          set	134
   179     0081                     _OPTION_REG     set	129
   180                           
   181                           	psect	cinit
   182     000F                     start_initialization:	
   183                           ; #config settings
   184                           
   185     000F                     __initialization:
   186                           
   187                           ; Clear objects allocated to COMMON
   188     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   189     0010                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     0010                     __end_of__initialization:
   193     0010  0183               	clrf	3
   194     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMMON
   197     0072                     __pbssCOMMON:
   198     0072                     _Timer_count:
   199     0072                     	ds	1
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_timer_0:
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_timer_0:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212     0070                     	ds	2
   213     0072                     ??_main:
   214                           
   215                           	psect	maintext
   216     0014                     __pmaintext:	
   217                           ; 1 bytes @ 0x2
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 36 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     0014                     _main:	
   251                           ;psect for function _main
   252                           
   253     0014                     l566:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [wreg+status,2+status,0]
   256                           
   257                           
   258                           ;main.c: 38: INTCONbits.GIE = 1;
   259     0014  178B               	bsf	11,7	;volatile
   260                           
   261                           ;main.c: 39: INTCONbits.PEIE = 1;
   262     0015  170B               	bsf	11,6	;volatile
   263                           
   264                           ;main.c: 40: INTCONbits.TMR0IE = 1;
   265     0016  168B               	bsf	11,5	;volatile
   266                           
   267                           ;main.c: 42: OPTION_REG = 0x07;
   268     0017  3007               	movlw	7
   269     0018  1683               	bsf	3,5	;RP0=1, select bank1
   270     0019  1303               	bcf	3,6	;RP1=0, select bank1
   271     001A  0081               	movwf	1	;volatile
   272                           
   273                           ;main.c: 44: TMR0 = 59;
   274     001B  303B               	movlw	59
   275     001C  1283               	bcf	3,5	;RP0=0, select bank0
   276     001D  1303               	bcf	3,6	;RP1=0, select bank0
   277     001E  0081               	movwf	1	;volatile
   278     001F                     l568:
   279                           
   280                           ;main.c: 46: TRISB = 0x00;
   281     001F  1683               	bsf	3,5	;RP0=1, select bank1
   282     0020  1303               	bcf	3,6	;RP1=0, select bank1
   283     0021  0186               	clrf	6	;volatile
   284     0022                     l570:
   285                           
   286                           ;main.c: 49: {;main.c: 50: if(Timer_count == 0)
   287     0022  0872               	movf	_Timer_count,w
   288     0023  1D03               	btfss	3,2
   289     0024  2826               	goto	u21
   290     0025  2827               	goto	u20
   291     0026                     u21:
   292     0026  282A               	goto	l574
   293     0027                     u20:
   294     0027                     l572:
   295                           
   296                           ;main.c: 51: {;main.c: 52: PORTBbits.RB0 = 1;
   297     0027  1283               	bcf	3,5	;RP0=0, select bank0
   298     0028  1303               	bcf	3,6	;RP1=0, select bank0
   299     0029  1406               	bsf	6,0	;volatile
   300     002A                     l574:
   301                           
   302                           ;main.c: 53: };main.c: 54: if(Timer_count == 100)
   303     002A  3064               	movlw	100
   304     002B  0672               	xorwf	_Timer_count,w
   305     002C  1D03               	btfss	3,2
   306     002D  282F               	goto	u31
   307     002E  2830               	goto	u30
   308     002F                     u31:
   309     002F  2833               	goto	l578
   310     0030                     u30:
   311     0030                     l576:
   312                           
   313                           ;main.c: 55: {;main.c: 56: PORTBbits.RB0 = 0;
   314     0030  1283               	bcf	3,5	;RP0=0, select bank0
   315     0031  1303               	bcf	3,6	;RP1=0, select bank0
   316     0032  1006               	bcf	6,0	;volatile
   317     0033                     l578:
   318                           
   319                           ;main.c: 57: };main.c: 58: if(Timer_count == 200)
   320     0033  30C8               	movlw	200
   321     0034  0672               	xorwf	_Timer_count,w
   322     0035  1D03               	btfss	3,2
   323     0036  2838               	goto	u41
   324     0037  2839               	goto	u40
   325     0038                     u41:
   326     0038  2822               	goto	l570
   327     0039                     u40:
   328     0039                     l580:
   329                           
   330                           ;main.c: 59: {;main.c: 60: Timer_count = 0;
   331     0039  01F2               	clrf	_Timer_count
   332     003A  2822               	goto	l570
   333     003B  120A  118A  280C   	ljmp	start
   334     003E                     __end_of_main:
   335                           
   336                           	psect	text1
   337     003E                     __ptext1:	
   338 ;; *************** function _timer_0 *****************
   339 ;; Defined at:
   340 ;;		line 25 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          2       0       0       0       0
   357 ;;      Totals:         2       0       0       0       0
   358 ;;Total ram usage:        2 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		Interrupt level 1
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     003E                     _timer_0:	
   368                           ;psect for function _timer_0
   369                           
   370     003E                     i1l560:
   371                           
   372                           ;main.c: 27: if(INTCONbits.TMR0IF == 1)
   373     003E  1D0B               	btfss	11,2	;volatile
   374     003F  2841               	goto	u1_21
   375     0040  2842               	goto	u1_20
   376     0041                     u1_21:
   377     0041  2845               	goto	i1l18
   378     0042                     u1_20:
   379     0042                     i1l562:
   380                           
   381                           ;main.c: 28: {;main.c: 29: Timer_count++;
   382     0042  3001               	movlw	1
   383     0043  07F2               	addwf	_Timer_count,f
   384     0044                     i1l564:
   385                           
   386                           ;main.c: 30: INTCONbits.TMR0IF = 0;
   387     0044  110B               	bcf	11,2	;volatile
   388     0045                     i1l18:
   389     0045  0871               	movf	??_timer_0+1,w
   390     0046  008A               	movwf	10
   391     0047  0E70               	swapf	??_timer_0,w
   392     0048  0083               	movwf	3
   393     0049  0EFE               	swapf	btemp,f
   394     004A  0E7E               	swapf	btemp,w
   395     004B  0009               	retfie
   396     004C                     __end_of_timer_0:
   397     0002                     ___latbits      equ	2
   398     007E                     btemp           set	126	;btemp
   399     007E                     wtemp0          set	126
   400                           
   401                           	psect	intentry
   402     0004                     __pintentry:	
   403                           ;incstack = 0
   404                           ; Regs used in _timer_0: [wreg+status,2+status,0]
   405                           
   406     0004                     interrupt_function:
   407     007E                     saved_w         set	btemp
   408     0004  00FE               	movwf	btemp
   409     0005  0E03               	swapf	3,w
   410     0006  00F0               	movwf	??_timer_0
   411     0007  080A               	movf	10,w
   412     0008  00F1               	movwf	??_timer_0+1
   413     0009  120A  118A  283E   	ljmp	_timer_0
   414                           
   415                           	psect	config
   416                           
   417                           ;Config register CONFIG @ 0x2007
   418                           ;	Oscillator Selection bits
   419                           ;	FOSC = HS, HS oscillator
   420                           ;	Watchdog Timer Enable bit
   421                           ;	WDTE = OFF, WDT disabled
   422                           ;	Power-up Timer Enable bit
   423                           ;	PWRTE = OFF, PWRT disabled
   424                           ;	Brown-out Reset Enable bit
   425                           ;	BOREN = OFF, BOR disabled
   426                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   427                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   428                           ;	Data EEPROM Memory Code Protection bit
   429                           ;	CPD = OFF, Data EEPROM code protection off
   430                           ;	Flash Program Memory Write Enable bits
   431                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   432                           ;	In-Circuit Debugger Mode bit
   433                           ;	DEBUG = 0x1, unprogrammed default
   434                           ;	Flash Program Memory Code Protection bit
   435                           ;	CP = OFF, Code protection off
   436     2007                     	org	8199
   437     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer_0 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer_0                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer_0 (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 30 20:48:29 2025

                     u20 0027                       u21 0026                       u30 0030  
                     u31 002F                       u40 0039                       u41 0038  
                    l570 0022                      l580 0039                      l572 0027  
                    l574 002A                      l566 0014                      l576 0030  
                    l568 001F                      l578 0033                     i1l18 0045  
                   _TMR0 0001                     u1_20 0042                     u1_21 0041  
                   _main 0014                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l560 003E                    i1l562 0042  
                  i1l564 0044                    _TRISB 0086                    pclath 000A  
        __end_of_timer_0 004C                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 003E                   ??_main 0072  
                 saved_w 007E                ??_timer_0 0070  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pmaintext 0014               __pintentry 0004  
                __ptext1 003E              _Timer_count 0072                  _timer_0 003E  
   end_of_initialization 0010                _PORTBbits 0006      start_initialization 000F  
            __pbssCOMMON 0072                ___latbits 0002                 ?_timer_0 0070  
      interrupt_function 0004               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
