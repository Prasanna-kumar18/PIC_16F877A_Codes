

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jan 24 20:24:53 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     0006                     _PORTBbits      set	6
   178     0006                     _PORTB          set	6
   179     0086                     _TRISB          set	134
   180                           
   181                           	psect	strings
   182     0003                     __pstrings:
   183     0003                     stringtab:
   184     0003                     __stringtab:
   185     0003                     stringcode:	
   186                           ;	String table - string pointers are 1 byte each
   187                           
   188     0003                     stringdir:
   189     0003  3000               	movlw	high stringdir
   190     0004  008A               	movwf	10
   191     0005  0804               	movf	4,w
   192     0006  0A84               	incf	4,f
   193     0007  0782               	addwf	2,f
   194     0008                     __stringbase:
   195     0008  3400               	retlw	0
   196     0009                     __end_of__stringtab:
   197     0009                     STR_2:
   198     0009  344C               	retlw	76	;'L'
   199     000A  3443               	retlw	67	;'C'
   200     000B  3444               	retlw	68	;'D'
   201     000C  3420               	retlw	32	;' '
   202     000D  3444               	retlw	68	;'D'
   203     000E  3469               	retlw	105	;'i'
   204     000F  3473               	retlw	115	;'s'
   205     0010  3470               	retlw	112	;'p'
   206     0011  346C               	retlw	108	;'l'
   207     0012  3461               	retlw	97	;'a'
   208     0013  3479               	retlw	121	;'y'
   209     0014  3400               	retlw	0
   210     0015                     STR_1:
   211     0015  3434               	retlw	52	;'4'
   212     0016  342D               	retlw	45	;'-'
   213     0017  3442               	retlw	66	;'B'
   214     0018  3469               	retlw	105	;'i'
   215     0019  3474               	retlw	116	;'t'
   216     001A  3400               	retlw	0
   217                           
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2F6C   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_lcd_data:
   233     0070                     ?_lcd_cmd:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_lcd_init:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_main:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ??_lcd_data:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_lcd_cmd:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250     0070                     	ds	2
   251     0072                     lcd_data@data:
   252     0072                     lcd_cmd@cmd:	
   253                           ; 1 bytes @ 0x2
   254                           
   255                           
   256                           ; 1 bytes @ 0x2
   257     0072                     	ds	1
   258     0073                     ?_lcd_string:
   259     0073                     lcd_string@str:	
   260                           ; 1 bytes @ 0x3
   261                           
   262     0073                     ??_lcd_init:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           ; 1 bytes @ 0x3
   267     0073                     	ds	1
   268     0074                     lcd_string@num:
   269                           
   270                           ; 2 bytes @ 0x4
   271     0074                     	ds	2
   272     0076                     lcd_string@i:
   273     0076                     ??_lcd_string:	
   274                           ; 2 bytes @ 0x6
   275                           
   276                           
   277                           ; 1 bytes @ 0x6
   278     0076                     	ds	2
   279     0078                     ??_main:
   280                           
   281                           	psect	maintext
   282     076C                     __pmaintext:	
   283                           ; 1 bytes @ 0x8
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 76 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called: 2
   309 ;; This function calls:
   310 ;;		_lcd_cmd
   311 ;;		_lcd_init
   312 ;;		_lcd_string
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     076C                     _main:	
   319                           ;psect for function _main
   320                           
   321     076C                     l653:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   324                           
   325                           
   326                           ;main.c: 78:     TRISB = 0x00;
   327     076C  1683               	bsf	3,5	;RP0=1, select bank1
   328     076D  1303               	bcf	3,6	;RP1=0, select bank1
   329     076E  0186               	clrf	6	;volatile
   330     076F                     l655:
   331                           
   332                           ;main.c: 80:     lcd_init();
   333     076F  120A  118A  2732  120A  118A  	fcall	_lcd_init
   334     0774                     l657:
   335                           
   336                           ;main.c: 83:     {;main.c: 84:         lcd_cmd(0x86);
   337     0774  3086               	movlw	134
   338     0775  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   339     077A                     l659:
   340                           
   341                           ;main.c: 85:         lcd_string("4-Bit",5);
   342     077A  300D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   343     077B  00F3               	movwf	lcd_string@str
   344     077C  3005               	movlw	5
   345     077D  00F4               	movwf	lcd_string@num
   346     077E  3000               	movlw	0
   347     077F  00F5               	movwf	lcd_string@num+1
   348     0780  120A  118A  274B  120A  118A  	fcall	_lcd_string
   349     0785                     l661:
   350                           
   351                           ;main.c: 86:         lcd_cmd(0xC5);
   352     0785  30C5               	movlw	197
   353     0786  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   354     078B                     l663:
   355                           
   356                           ;main.c: 87:         lcd_string("LCD Display",11);
   357     078B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   358     078C  00F3               	movwf	lcd_string@str
   359     078D  300B               	movlw	11
   360     078E  00F4               	movwf	lcd_string@num
   361     078F  3000               	movlw	0
   362     0790  00F5               	movwf	lcd_string@num+1
   363     0791  120A  118A  274B  120A  118A  	fcall	_lcd_string
   364     0796  2F74               	goto	l657
   365     0797  120A  118A  2800   	ljmp	start
   366     079A                     __end_of_main:
   367                           
   368                           	psect	text1
   369     074B                     __ptext1:	
   370 ;; *************** function _lcd_string *****************
   371 ;; Defined at:
   372 ;;		line 59 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  str             1    3[COMMON] PTR unsigned char 
   375 ;;		 -> STR_2(12), STR_1(6), 
   376 ;;  num             2    4[COMMON] unsigned int 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  i               2    6[COMMON] unsigned int 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         3       0       0       0       0
   389 ;;      Locals:         2       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         5       0       0       0       0
   392 ;;Total ram usage:        5 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 1
   395 ;; This function calls:
   396 ;;		_lcd_data
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402     074B                     _lcd_string:	
   403                           ;psect for function _lcd_string
   404                           
   405     074B                     l645:	
   406                           ;incstack = 0
   407                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;main.c: 59: void lcd_string(unsigned char *str, unsigned int num);main.c: 60: {;main.c:
      +                           61:     for(unsigned int i=0;i<num;i++)
   411     074B  01F6               	clrf	lcd_string@i
   412     074C  01F7               	clrf	lcd_string@i+1
   413     074D  2F61               	goto	l651
   414     074E                     l647:
   415                           
   416                           ;main.c: 62:     {;main.c: 63:         lcd_data(str[i]);
   417     074E  0876               	movf	lcd_string@i,w
   418     074F  0773               	addwf	lcd_string@str,w
   419     0750  0084               	movwf	4
   420     0751  120A  118A  2003  120A  118A  	fcall	stringdir
   421     0756  120A  118A  27CB  120A  118A  	fcall	_lcd_data
   422     075B                     l649:
   423                           
   424                           ;main.c: 64:     }
   425     075B  3001               	movlw	1
   426     075C  07F6               	addwf	lcd_string@i,f
   427     075D  1803               	skipnc
   428     075E  0AF7               	incf	lcd_string@i+1,f
   429     075F  3000               	movlw	0
   430     0760  07F7               	addwf	lcd_string@i+1,f
   431     0761                     l651:
   432     0761  0875               	movf	lcd_string@num+1,w
   433     0762  0277               	subwf	lcd_string@i+1,w
   434     0763  1D03               	skipz
   435     0764  2F67               	goto	u45
   436     0765  0874               	movf	lcd_string@num,w
   437     0766  0276               	subwf	lcd_string@i,w
   438     0767                     u45:
   439     0767  1C03               	skipc
   440     0768  2F6A               	goto	u41
   441     0769  2F6B               	goto	u40
   442     076A                     u41:
   443     076A  2F4E               	goto	l647
   444     076B                     u40:
   445     076B                     l20:
   446     076B  0008               	return
   447     076C                     __end_of_lcd_string:
   448                           
   449                           	psect	text2
   450     07CB                     __ptext2:	
   451 ;; *************** function _lcd_data *****************
   452 ;; Defined at:
   453 ;;		line 27 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  data            1    wreg     unsigned char 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  data            1    2[COMMON] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         1       0       0       0       0
   469 ;;      Temps:          2       0       0       0       0
   470 ;;      Totals:         3       0       0       0       0
   471 ;;Total ram usage:        3 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_lcd_string
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480     07CB                     _lcd_data:	
   481                           ;psect for function _lcd_data
   482                           
   483                           
   484                           ;incstack = 0
   485                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   486                           ;lcd_data@data stored from wreg
   487     07CB  00F2               	movwf	lcd_data@data
   488     07CC                     l575:
   489                           
   490                           ;main.c: 27: void lcd_data(unsigned char data);main.c: 28: {;main.c: 29:     PORTB = (da
      +                          ta & 0xF0);
   491     07CC  0872               	movf	lcd_data@data,w
   492     07CD  39F0               	andlw	240
   493     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   494     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   495     07D0  0086               	movwf	6	;volatile
   496     07D1                     l577:
   497                           
   498                           ;main.c: 30:     PORTBbits.RB0 = 1;
   499     07D1  1406               	bsf	6,0	;volatile
   500     07D2                     l579:
   501                           
   502                           ;main.c: 31:     PORTBbits.RB1 = 0;
   503     07D2  1086               	bcf	6,1	;volatile
   504     07D3                     l581:
   505                           
   506                           ;main.c: 32:     PORTBbits.RB2 = 1;
   507     07D3  1506               	bsf	6,2	;volatile
   508     07D4                     l583:
   509                           
   510                           ;main.c: 33:     _delay((unsigned long)((5)*(20000000/4000.0)));
   511     07D4  3021               	movlw	33
   512     07D5  00F1               	movwf	??_lcd_data+1
   513     07D6  3076               	movlw	118
   514     07D7  00F0               	movwf	??_lcd_data
   515     07D8                     u57:
   516     07D8  0BF0               	decfsz	??_lcd_data,f
   517     07D9  2FD8               	goto	u57
   518     07DA  0BF1               	decfsz	??_lcd_data+1,f
   519     07DB  2FD8               	goto	u57
   520     07DC  0000               	nop
   521     07DD                     l585:
   522                           
   523                           ;main.c: 34:     PORTBbits.RB2 = 0;
   524     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   525     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   526     07DF  1106               	bcf	6,2	;volatile
   527     07E0                     l587:
   528                           
   529                           ;main.c: 35:     PORTB = ((data<<4)& 0xF0);
   530     07E0  0872               	movf	lcd_data@data,w
   531     07E1  00F0               	movwf	??_lcd_data
   532     07E2  3003               	movlw	3
   533     07E3                     u15:
   534     07E3  1003               	clrc
   535     07E4  0DF0               	rlf	??_lcd_data,f
   536     07E5  3EFF               	addlw	-1
   537     07E6  1D03               	skipz
   538     07E7  2FE3               	goto	u15
   539     07E8  1003               	clrc
   540     07E9  0D70               	rlf	??_lcd_data,w
   541     07EA  39F0               	andlw	240
   542     07EB  0086               	movwf	6	;volatile
   543     07EC                     l589:
   544                           
   545                           ;main.c: 36:     PORTBbits.RB0 = 1;
   546     07EC  1406               	bsf	6,0	;volatile
   547     07ED                     l591:
   548                           
   549                           ;main.c: 37:     PORTBbits.RB1 = 0;
   550     07ED  1086               	bcf	6,1	;volatile
   551     07EE                     l593:
   552                           
   553                           ;main.c: 38:     PORTBbits.RB2 = 1;
   554     07EE  1506               	bsf	6,2	;volatile
   555     07EF                     l595:
   556                           
   557                           ;main.c: 39:     _delay((unsigned long)((5)*(20000000/4000.0)));
   558     07EF  3021               	movlw	33
   559     07F0  00F1               	movwf	??_lcd_data+1
   560     07F1  3076               	movlw	118
   561     07F2  00F0               	movwf	??_lcd_data
   562     07F3                     u67:
   563     07F3  0BF0               	decfsz	??_lcd_data,f
   564     07F4  2FF3               	goto	u67
   565     07F5  0BF1               	decfsz	??_lcd_data+1,f
   566     07F6  2FF3               	goto	u67
   567     07F7  0000               	nop
   568     07F8                     l597:
   569                           
   570                           ;main.c: 40:     PORTBbits.RB2 = 0;
   571     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   572     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   573     07FA  1106               	bcf	6,2	;volatile
   574     07FB                     l11:
   575     07FB  0008               	return
   576     07FC                     __end_of_lcd_data:
   577                           
   578                           	psect	text3
   579     0732                     __ptext3:	
   580 ;; *************** function _lcd_init *****************
   581 ;; Defined at:
   582 ;;		line 67 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 1
   603 ;; This function calls:
   604 ;;		_lcd_cmd
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610     0732                     _lcd_init:	
   611                           ;psect for function _lcd_init
   612                           
   613     0732                     l631:	
   614                           ;incstack = 0
   615                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   616                           
   617                           
   618                           ;main.c: 69:     lcd_cmd(0x28);
   619     0732  3028               	movlw	40
   620     0733  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   621                           
   622                           ;main.c: 70:     lcd_cmd(0x06);
   623     0738  3006               	movlw	6
   624     0739  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   625                           
   626                           ;main.c: 71:     lcd_cmd(0x0C);
   627     073E  300C               	movlw	12
   628     073F  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   629                           
   630                           ;main.c: 72:     lcd_cmd(0x01);
   631     0744  3001               	movlw	1
   632     0745  120A  118A  279A  120A  118A  	fcall	_lcd_cmd
   633     074A                     l23:
   634     074A  0008               	return
   635     074B                     __end_of_lcd_init:
   636                           
   637                           	psect	text4
   638     079A                     __ptext4:	
   639 ;; *************** function _lcd_cmd *****************
   640 ;; Defined at:
   641 ;;		line 43 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  cmd             1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  cmd             1    2[COMMON] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0
   657 ;;      Temps:          2       0       0       0       0
   658 ;;      Totals:         3       0       0       0       0
   659 ;;Total ram usage:        3 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_lcd_init
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669     079A                     _lcd_cmd:	
   670                           ;psect for function _lcd_cmd
   671                           
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
   675                           ;lcd_cmd@cmd stored from wreg
   676     079A  00F2               	movwf	lcd_cmd@cmd
   677     079B                     l599:
   678                           
   679                           ;main.c: 43: void lcd_cmd(unsigned char cmd);main.c: 44: {;main.c: 45:     PORTB = (cmd 
      +                          & 0xF0);
   680     079B  0872               	movf	lcd_cmd@cmd,w
   681     079C  39F0               	andlw	240
   682     079D  1283               	bcf	3,5	;RP0=0, select bank0
   683     079E  1303               	bcf	3,6	;RP1=0, select bank0
   684     079F  0086               	movwf	6	;volatile
   685     07A0                     l601:
   686                           
   687                           ;main.c: 46:     PORTBbits.RB0 = 0;
   688     07A0  1006               	bcf	6,0	;volatile
   689     07A1                     l603:
   690                           
   691                           ;main.c: 47:     PORTBbits.RB1 = 0;
   692     07A1  1086               	bcf	6,1	;volatile
   693     07A2                     l605:
   694                           
   695                           ;main.c: 48:     PORTBbits.RB2 = 1;
   696     07A2  1506               	bsf	6,2	;volatile
   697     07A3                     l607:
   698                           
   699                           ;main.c: 49:     _delay((unsigned long)((5)*(20000000/4000.0)));
   700     07A3  3021               	movlw	33
   701     07A4  00F1               	movwf	??_lcd_cmd+1
   702     07A5  3076               	movlw	118
   703     07A6  00F0               	movwf	??_lcd_cmd
   704     07A7                     u77:
   705     07A7  0BF0               	decfsz	??_lcd_cmd,f
   706     07A8  2FA7               	goto	u77
   707     07A9  0BF1               	decfsz	??_lcd_cmd+1,f
   708     07AA  2FA7               	goto	u77
   709     07AB  0000               	nop
   710     07AC                     l609:
   711                           
   712                           ;main.c: 50:     PORTBbits.RB2 = 0;
   713     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   714     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   715     07AE  1106               	bcf	6,2	;volatile
   716     07AF                     l611:
   717                           
   718                           ;main.c: 51:     PORTB = ((cmd<<4) & 0xF0);
   719     07AF  0872               	movf	lcd_cmd@cmd,w
   720     07B0  00F0               	movwf	??_lcd_cmd
   721     07B1  3003               	movlw	3
   722     07B2                     u25:
   723     07B2  1003               	clrc
   724     07B3  0DF0               	rlf	??_lcd_cmd,f
   725     07B4  3EFF               	addlw	-1
   726     07B5  1D03               	skipz
   727     07B6  2FB2               	goto	u25
   728     07B7  1003               	clrc
   729     07B8  0D70               	rlf	??_lcd_cmd,w
   730     07B9  39F0               	andlw	240
   731     07BA  0086               	movwf	6	;volatile
   732     07BB                     l613:
   733                           
   734                           ;main.c: 52:     PORTBbits.RB0 = 0;
   735     07BB  1006               	bcf	6,0	;volatile
   736     07BC                     l615:
   737                           
   738                           ;main.c: 53:     PORTBbits.RB1 = 0;
   739     07BC  1086               	bcf	6,1	;volatile
   740     07BD                     l617:
   741                           
   742                           ;main.c: 54:     PORTBbits.RB2 = 1;
   743     07BD  1506               	bsf	6,2	;volatile
   744     07BE                     l619:
   745                           
   746                           ;main.c: 55:     _delay((unsigned long)((5)*(20000000/4000.0)));
   747     07BE  3021               	movlw	33
   748     07BF  00F1               	movwf	??_lcd_cmd+1
   749     07C0  3076               	movlw	118
   750     07C1  00F0               	movwf	??_lcd_cmd
   751     07C2                     u87:
   752     07C2  0BF0               	decfsz	??_lcd_cmd,f
   753     07C3  2FC2               	goto	u87
   754     07C4  0BF1               	decfsz	??_lcd_cmd+1,f
   755     07C5  2FC2               	goto	u87
   756     07C6  0000               	nop
   757     07C7                     l621:
   758                           
   759                           ;main.c: 56:     PORTBbits.RB2 = 0;
   760     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   761     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   762     07C9  1106               	bcf	6,2	;volatile
   763     07CA                     l14:
   764     07CA  0008               	return
   765     07CB                     __end_of_lcd_cmd:
   766     0002                     ___latbits      equ	2
   767     007E                     btemp           set	126	;btemp
   768     007E                     wtemp0          set	126
   769                           
   770                           	psect	config
   771                           
   772                           ;Config register CONFIG @ 0x2007
   773                           ;	Oscillator Selection bits
   774                           ;	FOSC = HS, HS oscillator
   775                           ;	Watchdog Timer Enable bit
   776                           ;	WDTE = OFF, WDT disabled
   777                           ;	Power-up Timer Enable bit
   778                           ;	PWRTE = OFF, PWRT disabled
   779                           ;	Brown-out Reset Enable bit
   780                           ;	BOREN = ON, BOR enabled
   781                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   782                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   783                           ;	Data EEPROM Memory Code Protection bit
   784                           ;	CPD = OFF, Data EEPROM code protection off
   785                           ;	Flash Program Memory Write Enable bits
   786                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   787                           ;	In-Circuit Debugger Mode bit
   788                           ;	DEBUG = 0x1, unprogrammed default
   789                           ;	Flash Program Memory Code Protection bit
   790                           ;	CP = ON, All program memory code-protected
   791     2007                     	org	8199
   792     2007  1FFA               	dw	8186

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[6]), STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     184
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           5     2      3     124
                                              3 COMMON     5     2      3
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      30
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jan 24 20:24:53 2025

                      pc 0002             lcd_data@data 0072                       l11 07FB  
                     l20 076B                       l14 07CA                       l23 074A  
                     u15 07E3                       u40 076B                       u25 07B2  
                     u41 076A                       u45 0767                       u57 07D8  
                     u67 07F3                       u77 07A7                       u87 07C2  
                     fsr 0004                      l601 07A0                      l611 07AF  
                    l603 07A1                      l621 07C7                      l613 07BB  
                    l605 07A2                      l615 07BC                      l607 07A3  
                    l631 0732                      l617 07BD                      l609 07AC  
                    l619 07BE                      l651 0761                      l581 07D3  
                    l645 074B                      l661 0785                      l653 076C  
                    l591 07ED                      l583 07D4                      l575 07CC  
                    l647 074E                      l663 078B                      l655 076F  
                    l593 07EE                      l585 07DD                      l577 07D1  
                    l649 075B                      l657 0774                      l595 07EF  
                    l587 07E0                      l579 07D2                      l659 077A  
                    l597 07F8                      l589 07EC                      l599 079B  
                    fsr0 0004                     STR_1 0015                     STR_2 0009  
                   _main 076C                     btemp 007E                     start 0000  
            lcd_string@i 0076                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086          __end_of_lcd_cmd 07CB                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 079A                   ??_main 0078         __end_of_lcd_data 07FC  
       __end_of_lcd_init 074B                ??_lcd_cmd 0070            lcd_string@num 0074  
          lcd_string@str 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 076C                ?_lcd_data 0070               _lcd_string 074B  
              ?_lcd_init 0070               __stringtab 0003                  __ptext1 074B  
                __ptext2 07CB                  __ptext3 0732                  __ptext4 079A  
                _lcd_cmd 079A               ??_lcd_data 0070               ??_lcd_init 0073  
   end_of_initialization 07FC                _PORTBbits 0006               lcd_cmd@cmd 0072  
            ?_lcd_string 0073      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003                 ?_lcd_cmd 0070              __stringbase 0008  
           ??_lcd_string 0076       __end_of_lcd_string 076C       __end_of__stringtab 0009  
               _lcd_data 07CB                 _lcd_init 0732                stringcode 0003  
               stringdir 0003                 stringtab 0003  
